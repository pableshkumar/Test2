<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <dynamicChoiceSets>
        <name>CurrencyIsoCode</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>CurrencyIsoCode</picklistField>
        <picklistObject>Payment__c</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>Mode</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Payment_Mode__c</picklistField>
        <picklistObject>Payment__c</picklistObject>
    </dynamicChoiceSets>
    <formulas>
        <name>CheckAmount</name>
        <dataType>Boolean</dataType>
        <expression>IF({!Get_Invoice.Outstanding_Amount__c} - {!Amount} &gt;= 0, TRUE, FALSE)</expression>
    </formulas>
    <formulas>
        <name>outstandingAmount</name>
        <dataType>Currency</dataType>
        <expression>{!Get_Invoice.Outstanding_Amount__c}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>paymentRecordType</name>
        <dataType>String</dataType>
        <expression>IF({!Get_Invoice.RecordType.Name} == &apos;Sales Invoice&apos;, &apos;Receivable&apos;, &apos;Payable&apos;)</expression>
    </formulas>
    <interviewLabel>Record Payment {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Record Payment</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_Invoice_Payment</name>
        <label>Create Invoice Payment</label>
        <locationX>161</locationX>
        <locationY>345</locationY>
        <faultConnector>
            <targetReference>errro</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>Amount__c</field>
            <value>
                <elementReference>Amount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CurrencyIsoCode</field>
            <value>
                <elementReference>Get_Invoice.CurrencyIsoCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Invoice__c</field>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Payment__c</field>
            <value>
                <elementReference>Create_Payment</elementReference>
            </value>
        </inputAssignments>
        <object>Invoice_Payment__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Payment</name>
        <label>Create Payment</label>
        <locationX>428</locationX>
        <locationY>385</locationY>
        <connector>
            <targetReference>Create_Invoice_Payment</targetReference>
        </connector>
        <faultConnector>
            <targetReference>errro</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>Get_Invoice.Customer__r.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Amount__c</field>
            <value>
                <elementReference>Amount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CurrencyIsoCode</field>
            <value>
                <elementReference>Get_Invoice.CurrencyIsoCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Payment_Date__c</field>
            <value>
                <elementReference>Date</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Payment_Mode__c</field>
            <value>
                <elementReference>PMode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>Get_Payment_RecordTypes.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Reference_No__c</field>
            <value>
                <elementReference>Payment_Reference_No</elementReference>
            </value>
        </inputAssignments>
        <object>Payment__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Invoice</name>
        <label>Get Invoice</label>
        <locationX>484</locationX>
        <locationY>155</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Record_Payment</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Invoice__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Payment_RecordTypes</name>
        <label>Get Payment RecordTypes</label>
        <locationX>845</locationX>
        <locationY>301</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Payment</targetReference>
        </connector>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>paymentRecordType</elementReference>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Payment__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <screens>
        <name>errro</name>
        <label>errro</label>
        <locationX>412</locationX>
        <locationY>642</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>erorr</name>
            <fieldText>&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Record_Payment</name>
        <label>Record Payment</label>
        <locationX>835</locationX>
        <locationY>151</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Get_Payment_RecordTypes</targetReference>
        </connector>
        <fields>
            <name>Payment_Reference_No</name>
            <dataType>String</dataType>
            <fieldText>Payment Reference No</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Date</name>
            <dataType>Date</dataType>
            <defaultValue>
                <elementReference>$Flow.CurrentDate</elementReference>
            </defaultValue>
            <fieldText>Date</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Amount</name>
            <dataType>Number</dataType>
            <defaultValue>
                <elementReference>Get_Invoice.Outstanding_Amount__c</elementReference>
            </defaultValue>
            <fieldText>Amount</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(62, 62, 60);&quot;&gt;Excess amount entered.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!outstandingAmount} - {!Amount} &gt;= 0</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>PMode</name>
            <choiceReferences>Mode</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Mode</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>106</locationX>
        <locationY>66</locationY>
        <connector>
            <targetReference>Get_Invoice</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
